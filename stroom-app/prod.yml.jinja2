{#-
#  ============================== IMPORTANT ==============================
#
#  This file is templated with jinja2 syntax and is intended for use by
#  stroom.dist.GenerateDistributionConfig. The reason for this is so we can
#  have one file that is used for both the docker and zip distributions.
#  Any instances of ${...} are not jinja2 and are intended to remain as is in the
#  generated file and are for use by DropWizard with its variable substitution.
#
#  Stuff like "{{ 'my_value' | envVar('ENV_VAR') }}"
#  will either render as
#    "${ENV_VAR:-my_value}"
#  or
#    "my_value"
#  depending on the value of includeEnvVarSubstitution.  I.e. in the docker
#  distribution we want bash style env var substitution but in the zip
#  distribution we don't.
#  'envVar()' is our own custom jinja2 filter defined in
#  stroom.dist.GenerateDistributionConfig.
#  To see how this renders run the main method in GenerateDistributionConfig.
#  That main method is run from gradle when building the distributions.
#
#  All empty lines will be removed. You can explicitly add an empty line
#  by adding a line with just a single comment char (#) in it.
#
#  ============================== IMPORTANT ==============================
#}
{#- Define all the jinja2 variable values for each distribution type #}
{%- if distribution == "docker" %}
  {%- set stroomHome = '/stroom' %}
  {%- set includeEnvVarSubstitution = true %}
{%- elif distribution == "zip" %}
  {%- set stroomHome = '${STROOM_HOME:-}' %}
  {%- set includeEnvVarSubstitution = false %}
{%- endif %}
# Stroom configuration file
# =========================
#
# For information on the structure of this configuration file see:
# https://www.dropwizard.io/en/latest/manual/configuration.html
# For information on the logback logFormat strings see:
# http://logback.qos.ch/manual/layouts.html
#
# This configuration file was made for the {{ distribution }} distribution.
#
# This section is the DropWizard configuration for Stroom
#
server:
  applicationContextPath: "/"
  adminContextPath: "/stroomAdmin"
  applicationConnectors:
    - type: http
      port: 8080
      useForwardedHeaders: true
  adminConnectors:
    - type: http
      port: 8081
      useForwardedHeaders: true
  detailedJsonProcessingExceptionMapper: true
  requestLog:
    appenders:
      # Log appender for the web server request logging
    - type: file
      currentLogFilename: logs/access/access.log
      discardingThreshold: 0
      # Rolled and gzipped every minute
      archivedLogFilenamePattern: logs/access/access-%d{yyyy-MM-dd'T'HH:mm}.log.gz
      archivedFileCount: 10080
      logFormat: '%h %l "%u" [%t] "%r" %s %b "%i{Referer}" "%i{User-Agent}" %D'
#
logging:
  level: WARN
  loggers:
    # Logs useful information about stroom. Only set DEBUG on specific 'stroom' classes or packages
    # due to the large volume of logs that would be produced for all of 'stroom' in DEBUG.
    stroom: INFO
    # Logs useful information about dropwizard when booting stroom
    io.dropwizard: INFO
    # Logs useful information about the jetty server when booting stroom
    org.eclipse.jetty: INFO
    # Logs REST request/responses with headers/payloads. Set this to OFF to turn disable that logging.
    org.glassfish.jersey.logging.LoggingFeature: INFO
    # Logs summary information about FlyWay database migrations
    org.flywaydb: INFO
    # Logger and appender for audit logs
    "event-logger":
      level: INFO
      additive: false
      appenders:
        - type: file
          currentLogFilename: logs/user/user.log
          discardingThreshold: 0
          # Rolled every minute
          archivedLogFilenamePattern: logs/user/user-%d{yyyy-MM-dd'T'HH:mm}.log
          # Minute rolled logs older than a week will be deleted. Note rolled logs are deleted
          # based on the age of the window they contain, not the number of them. This value should be greater
          # than the maximum time stroom is not producing events for.
          archivedFileCount: 10080
          logFormat: "%msg%n"
    # Logger and appender for the flyway DB migration SQL output
    org.flywaydb.core.internal.sqlscript:
      level: DEBUG
      additive: false
      appenders:
        - type: file
          currentLogFilename: logs/migration/migration.log
          discardingThreshold: 0
          # Rolled every day
          archivedLogFilenamePattern: logs/migration/migration-%d{yyyy-MM-dd}.log
          archivedFileCount: 10
          logFormat: "%-6level [%d{\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",UTC}] [%t] %logger - %X{code} %msg %n"
#
  appenders:

  {% if distribution == "docker" %}
  #
    # stdout for docker
  - type: console
    # Multi-coloured log format for console output
    logFormat: "%highlight(%-6level) [%d{\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",UTC}] [%green(%t)] %cyan(%logger) - %X{code} %msg %n"
    timeZone: UTC
  {% endif %}
#
    # Minute rolled files for stroom/datafeed, will be curl'd/deleted by stroom-log-sender
  - type: file
    currentLogFilename: logs/app/app.log
    discardingThreshold: 0
    # Rolled and gzipped every minute
    archivedLogFilenamePattern: logs/app/app-%d{yyyy-MM-dd'T'HH:mm}.log.gz
    # One week using minute files
    archivedFileCount: 10080
    logFormat: "%-6level [%d{\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",UTC}] [%t] %logger - %X{code} %msg %n"

  {% if distribution == "zip" %}
#
    # Size rolled logs for admins (10x100M), not curl'd to stroom
  - type: file
    currentLogFilename: logs/app.log
    discardingThreshold: 0
    archivedLogFilenamePattern: logs/app-%i.log
    archivedFileCount: 10
    maxFileSize: "100MB"
    logFormat: "%-6level [%d{\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",UTC}] [%t] %logger - %X{code} %msg %n"
  {% endif %}
#
# This section contains the configuration for the various HTTP clients used in stroom
# See https://gchq.github.io/stroom-docs/docs/user-guide/properties/#jersey-http-client-configuration
jerseyClients:
  OPEN_ID:
    # KeyCloak and Azure AD don't like gzip encoded requests
    gzipEnabledForRequests: false
#
# This section contains the Stroom configuration properties
# For more information see:
# https://gchq.github.io/stroom-docs/docs/user-guide/properties/
#
appConfig:
  commonDbDetails:
    connection:
      jdbcDriverUrl: "{{ 'jdbc:mysql://localhost:3307/stroom?useUnicode=yes&characterEncoding=UTF-8' | envVar('STROOM_JDBC_DRIVER_URL') }}"
      jdbcDriverUsername: "{{ 'stroomuser' | envVar('STROOM_JDBC_DRIVER_USERNAME') }}"
      jdbcDriverPassword: "{{ 'stroompassword1' | envVar('STROOM_JDBC_DRIVER_PASSWORD') }}"

  {% if distribution == "docker" %}
  contentPackImport:
    enabled: {{ false | envVar('STROOM_CONTENT_PACK_IMPORT_ENABLED') }}
  {% endif %}

  {% if distribution == "docker" %}
  job:
    enableJobsOnBootstrap: {{ false | envVar('STROOM_ENABLE_JOBS_ON_BOOTSTRAP') }}
  {% endif %}

  node:
    # The name for the node, should be unique to each node in the cluster
    name: "node1a"
  nodeUri:
    # The FQDN of the this node for inter-node communication. Can be private within the stroom cluster.
    # If not set stroom will try to determine it

    {% if distribution == "docker" %}
    hostname: "{{ 'localhost' | envVar('STROOM_HOST') }}"
    {% else %}
    # hostname: ""
    {% endif %}

  path:
    # By default all files read or written to by stroom will be in directories relative to
    # the home location. This must be set to an absolute path and also to one that differs
    # from the location of the installed software as it has a different lifecycle.
    home: "{{ stroomHome }}"
  publicUri:
    # The public FQDN for stroom, as typed into the browser, typically the public address of nginx
    # or the load balancer in front of multiple nginx instances.
    # If not set stroom will try to determine it

    {% if distribution == "docker" %}
    hostname: "{{ 'localhost' | envVar('API_GATEWAY_HOST') }}"
    port: "{{ 443 | envVar('API_GATEWAY_PORT') }}"
    {% else %}
    # hostname: ""
    {% endif %}

  {% if distribution == "docker" %}
  security:
    authentication:
      openId:
        # (EXTERNAL_IDP|INTERNAL_IDP|TEST_CREDENTIALS), Only use TEST_CREDENTIALS for test/demo installs
        # INTERNAL_IDP - Use API Keys generated in Stroom for feed status check. No support for token
        #            authentication on data receipt.
        # EXTERNAL_IDP - Usa an external IDP for receipt token auth and for outbound HTTP connections
        identityProviderType: "{{ 'INTERNAL_IDP' | envVar('IDENTITY_PROVIDER_TYPE') }}"
  {% endif %}
  serviceDiscovery:
    enabled: "{{ 'false' | envVar('STROOM_SERVICE_DISCOVERY_ENABLED') }}"
    zookeeperUrl: "{{ 'localhost:2181' | envVar('STROOM_SERVICE_DISCOVERY_ZOOKEEPER_URL') }}"
  {% endif %}

  statistics:

{% if distribution == "docker" %}
    hbase:
      kafkaConfigUuid:
    internal:
      enabledStoreTypes: {{ '[ \"StatisticStore\" ]' | envVar('STROOM_ENABLED_STAT_STORE_TYPES') }}
{% endif %}

    sql:
      db:
        connection:
          jdbcDriverUrl: "{{ 'jdbc:mysql://localhost:3307/stats?useUnicode=yes&characterEncoding=UTF-8' | envVar('STROOM_STATISTICS_JDBC_DRIVER_URL') }}"
          jdbcDriverUsername: "{{ 'statsuser' | envVar('STROOM_STATISTICS_JDBC_DRIVER_USERNAME') }}"
          jdbcDriverPassword: "{{ 'stroompassword1' | envVar('STROOM_STATISTICS_JDBC_DRIVER_PASSWORD') }}"
  {% if distribution == "docker" %}
  ui:
    helpUrl: "https://{{ 'localhost' | envVar('API_GATEWAY_HOST') }}/stroom-docs/docs"
  {% else %}
  # ui:
    # helpUrl: "https://<nginx host>/docs"
  {% endif %}
#
# vim: set filetype=yaml tabstop=2 shiftwidth=2 expandtab:
