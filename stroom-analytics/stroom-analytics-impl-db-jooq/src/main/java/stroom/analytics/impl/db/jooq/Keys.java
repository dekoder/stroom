/*
 * This file is generated by jOOQ.
 */
package stroom.analytics.impl.db.jooq;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import stroom.analytics.impl.db.jooq.tables.AnalyticTracker;
import stroom.analytics.impl.db.jooq.tables.ExecutionHistory;
import stroom.analytics.impl.db.jooq.tables.ExecutionSchedule;
import stroom.analytics.impl.db.jooq.tables.ExecutionTracker;
import stroom.analytics.impl.db.jooq.tables.records.AnalyticTrackerRecord;
import stroom.analytics.impl.db.jooq.tables.records.ExecutionHistoryRecord;
import stroom.analytics.impl.db.jooq.tables.records.ExecutionScheduleRecord;
import stroom.analytics.impl.db.jooq.tables.records.ExecutionTrackerRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * stroom.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AnalyticTrackerRecord> KEY_ANALYTIC_TRACKER_PRIMARY = Internal.createUniqueKey(AnalyticTracker.ANALYTIC_TRACKER, DSL.name("KEY_analytic_tracker_PRIMARY"), new TableField[] { AnalyticTracker.ANALYTIC_TRACKER.FK_ANALYTIC_UUID }, true);
    public static final UniqueKey<ExecutionHistoryRecord> KEY_EXECUTION_HISTORY_PRIMARY = Internal.createUniqueKey(ExecutionHistory.EXECUTION_HISTORY, DSL.name("KEY_execution_history_PRIMARY"), new TableField[] { ExecutionHistory.EXECUTION_HISTORY.ID }, true);
    public static final UniqueKey<ExecutionScheduleRecord> KEY_EXECUTION_SCHEDULE_PRIMARY = Internal.createUniqueKey(ExecutionSchedule.EXECUTION_SCHEDULE, DSL.name("KEY_execution_schedule_PRIMARY"), new TableField[] { ExecutionSchedule.EXECUTION_SCHEDULE.ID }, true);
    public static final UniqueKey<ExecutionTrackerRecord> KEY_EXECUTION_TRACKER_PRIMARY = Internal.createUniqueKey(ExecutionTracker.EXECUTION_TRACKER, DSL.name("KEY_execution_tracker_PRIMARY"), new TableField[] { ExecutionTracker.EXECUTION_TRACKER.FK_EXECUTION_SCHEDULE_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ExecutionHistoryRecord, ExecutionScheduleRecord> EXECUTION_HISTORY_EXECUTION_SCHEDULE_ID = Internal.createForeignKey(ExecutionHistory.EXECUTION_HISTORY, DSL.name("execution_history_execution_schedule_id"), new TableField[] { ExecutionHistory.EXECUTION_HISTORY.FK_EXECUTION_SCHEDULE_ID }, Keys.KEY_EXECUTION_SCHEDULE_PRIMARY, new TableField[] { ExecutionSchedule.EXECUTION_SCHEDULE.ID }, true);
    public static final ForeignKey<ExecutionTrackerRecord, ExecutionScheduleRecord> EXECUTION_TRACKER_EXECUTION_SCHEDULE_ID = Internal.createForeignKey(ExecutionTracker.EXECUTION_TRACKER, DSL.name("execution_tracker_execution_schedule_id"), new TableField[] { ExecutionTracker.EXECUTION_TRACKER.FK_EXECUTION_SCHEDULE_ID }, Keys.KEY_EXECUTION_SCHEDULE_PRIMARY, new TableField[] { ExecutionSchedule.EXECUTION_SCHEDULE.ID }, true);
}
