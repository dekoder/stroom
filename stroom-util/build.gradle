import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

ext.moduleName = 'stroom.util'

dependencies {
    compile project(':stroom-util-shared')

    compile project(':stroom-docref')

    compile libs.assertj_core // needed for DiffUtil
    compile libs.commons_codec
    compile libs.commons_compress
    compile libs.dropwizard_metrics_healthchecks
    compile libs.guava
    compile libs.guice5
    compile libs.jackson_annotations
    compile libs.jackson_core
    compile libs.jackson_databind
    compile libs.jackson_dataformat_yaml
    compile libs.javassist
    compile libs.javax_inject
    compile libs.javax_servlet_api
    compile libs.jaxb_api
    compile libs.saxon_he
    compile libs.slf4j_api
    compile libs.validation_api
    compile libs.ws_rs_api
    compile libs.xerces

    testCompile project(':stroom-test-common')
    testCompile libs.assertj_core
    testCompile libs.classgraph
    testCompile libs.commons_lang
    testCompile libs.guice_extension
    testCompile libs.junit_jupiter_api
    testCompile libs.dropwizard_validation
    testCompile libs.vavr

    // The following logging libs are needed when running junits outside dropwizard
    testRuntimeOnly libs.jaxb_runtime
    testRuntimeOnly libs.javax_activation
    testRuntimeOnly libs.jcl_over_slf4j
    testRuntimeOnly libs.jul_to_slf4j
    testRuntimeOnly libs.junit_jupiter_engine
    testRuntimeOnly libs.log4j_over_slf4j
    testRuntimeOnly libs.logback_classic
    testRuntimeOnly libs.logback_core
}

task writeBuildProperties {
    def propertyFile = file "${project.rootDir}/stroom-util/src/main/resources/META-INF/stroom-util-build.properties"
    def props = new Properties()

    props.setProperty("buildVersion", versions.stroom)
    props.setProperty("buildDate", ZonedDateTime.now().format(DateTimeFormatter.ISO_INSTANT))

    props.store(propertyFile.newWriter(), null)
}

tasks.compileJava.dependsOn writeBuildProperties
